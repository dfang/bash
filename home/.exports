# Prefer US English and use UTF-8. Use export to see what locale returns
export LANG='en_US.UTF-8';
export LC_ALL='en_US.UTF-8';

# Highlight section titles in manual pages.
export LESS_TERMCAP_md="${yellow}";

# Don’t clear the screen after quitting a manual page.
export MANPAGER='less -X';

alias sb='subl'
export EDITOR='sb';
export VISUAL='sb -w'
export KUBE_EDITOR='subl -w'

# use proxy/noproxy function defined in ~/.functions, 8118 is privoxy default port 
# export http_proxy='http://127.0.0.1:8118'


# Use curl from homebrew instead of system curl
export PATH="/usr/local/opt/curl/bin:$PATH"

export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"

# Fix for cargo build in macOS, https://github.com/Antti/rust-amqp
export OPENSSL_INCLUDE_DIR=/usr/local/opt/openssl/include
export OPENSSL_LIB_DIR=/usr/local/opt/openssl/lib

# Go
export GOPATH=$HOME/go
export PATH=$GOPATH/bin:$PATH

# Rust Cargo
export PATH="$HOME/.cargo/bin:$PATH"

# Miniconda
# export PATH=/usr/local/miniconda3/bin:"$PATH"

# Java
# export JAVA_HOME=`/usr/libexec/java_home`

# Helm
export HELM_HOME=$HOME/.helm

# kubectl krew plugin manager
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

# Conduit
export PATH="$HOME/.conduit/bin:$PATH"

# Fastlane
export PATH="$HOME/.fastlane/bin:$PATH"

# Deno
export PATH="$HOME/.deno/bin:$PATH"

# Flutter
export PATH="$HOME/.pub-cache/bin":"$PATH"

# Google Cloud Sdk
export PATH="$PATH:$HOME/google-cloud-sdk/bin"

# Serverless
export PATH="$PATH:$HOME/.serverless/bin"

export ipfs_api='127.0.0.1:5001/api/v0'

# ETCD
export ETCD_API=3

# Gloo  solo.io
export PATH=$HOME/.gloo/bin:$PATH

# 
# use asdf to manage python versions
# 
# # To use Homebrew's directories rather than ~/.pyenv
# export PYENV_ROOT=/usr/local/var/pyenv
# # export PYENV_ROOT="$HOME/.pyenv"
# # pyenv install 3.7.0
# # https://github.com/pyenv/pyenv/wiki/common-build-problems
# # For compilers to find readline you may need to set:
#
#

export NODEJS_ORG_MIRROR=https://cdn.npmmirror.com/binaries/node
export NVM_NODEJS_ORG_MIRROR=https://cdn.npmmirror.com/binaries/node
export PHANTOMJS_CDNURL=https://cdn.npmmirror.com/binaries/phantomjs
export CHROMEDRIVER_CDNURL=https://cdn.npmmirror.com/binaries/chromedriver
export OPERADRIVER_CDNURL=https://cdn.npmmirror.com/binaries/operadriver
export ELECTRON_MIRROR=https://cdn.npmmirror.com/binaries/electron/
export ELECTRON_BUILDER_BINARIES_MIRROR=https://cdn.npmmirror.com/binaries/electron-builder-binaries/
export SASS_BINARY_SITE=https://cdn.npmmirror.com/binaries/node-sass
export SWC_BINARY_SITE=https://cdn.npmmirror.com/binaries/node-swc
export NWJS_URLBASE=https://cdn.npmmirror.com/binaries/nwjs/v
export PUPPETEER_DOWNLOAD_HOST=https://cdn.npmmirror.com/binaries
export npm_config_sharp_binary_host=https://cdn.npmmirror.com/binaries/sharp
export npm_config_sharp_libvips_binary_host=https://cdn.npmmirror.com/binaries/sharp-libvips
export npm_config_robotjs_binary_host=https://cdn.npmmirror.com/binaries/robotjs
# export CYPRESS_DOWNLOAD_MIRROR=https://cdn.npmmirror.com/binaries/cypress
export npm_config_fsevents_binary_host=https://cdn.npmmirror.com/binaries/fsevents


# CYPRESS_DOWNLOAD_MIRROR
# https://blog.csdn.net/weixin_36221149/article/details/116761778
export CYPRESS_DOWNLOAD_MIRROR=https://download.cypress.io/desktop
# set CYPRESS_INSTALL_BINARY=D:\path\to\your\app\cypress.zip

alias cnpm="npm --registry=https://registry.npmmirror.com \
--cache=$HOME/.npm/.cache/cnpm \
--disturl=https://npmmirror.com/mirrors/node \
--userconfig=$HOME/.cnpmrc"


# https://download.cypress.io/desktop
# https://www.lfhacks.com/tech/chromium-behind-the-wall/
# 指定安装路径

# 为了能顺利安装，要避开 npm 默认下载路径 ，然后指定安装包的引用路径：

#     使用官方下载地址

# 这种方法适合第一次安装，只要把下载地址 https://download.cypress.io/desktop 赋给环境变量 CYPRESS_DOWNLOAD_MIRROR （各类系统下设置环境变量的方法见 下文），这时候再执行 npm install 时就能从环境变量中指定的官方地址下载。

#     指定本地路径

# 这种方法适合本地已经有安装包，需要反复安装的情景。只要把本地文件地址（绝对路径，精确到文件名）赋给环境变量 CYPRESS_INSTALL_BINARY ，再执行 npm install 时就能自动下载并安装。

# 下面来看如何在不同系统下指定环境变量。


export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow --glob "!.git/*"'

